class Solution {
public:
int depth(TreeNode*root){
    if(root==NULL) return NULL;
    return 1+max(depth(root->left),depth(root->right) );
}
    int findBottomLeftValue(TreeNode* root) {
        int h=depth(root); 
        int count=0;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        { count++;
            int level=q.size();
         for(int i=0;i<level;i++){
            auto x=q.front();
            q.pop();
            if(count==h) return x->val;
            if(x->left)
            {
                q.push(x->left);
            }
            if(x->right)
            {
                q.push(x->right);
            }
         }
            
        }
        return NULL;
        
    }
};
